{
  "openapi": "3.0.1",
  "info": {
    "title": "power-pulse-project-backend",
    "version": "2.0.1"
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://power-pulse-project-backend.onrender.com" },
    { "url": "http://localhost:3000" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Exercises",
      "description": "Exercises endpoints"
    },
    {
      "name": "Diary",
      "description": "Diary endpoints"
    },
    {
      "name": "Products",
      "description": "Products endpoints"
    },
    {
      "name": "Statistics",
      "description": "Statistics endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Auth"],
        "description": "Register a new user in the system",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "User authentication",
        "tags": ["Auth"],
        "description": "Authenticate a user in the system",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login"
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "User logout",
        "tags": ["Auth"],
        "description": "Log a user out of the system",
        "responses": {
          "200": {
            "description": "Successful logout"
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "summary": "Get the current user",
        "tags": ["User"],
        "description": "Retrieve data about the currently authorized user",
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      }
    },
    "/users/params": {
      "get": {
        "summary": "Get user parameters",
        "tags": ["User"],
        "description": "Endpoint to get user parameters",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Add user parameters",
        "tags": ["User"],
        "description": "Endpoint to add user parameters",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response"
          },
          "400": {
            "description": "Bad request, invalid input data"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "summary": "Update user parameters",
        "tags": ["User"],
        "description": "Endpoint to update user parameters",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User parameters successfully updated"
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      }
    },
    "/users/username": {
      "patch": {
        "summary": "Update user's name",
        "tags": ["User"],
        "description": "Update user's name",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsername"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User's name successfully updated"
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      }
    },
    "/users/avatars": {
      "patch": {
        "summary": "Update user's avatar",
        "tags": ["User"],
        "description": "Update user's avatar",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatarData": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User's avatar successfully updated"
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      }
    },
    "/exercises": {
      "get": {
        "summary": "Get all exercises",
        "tags": ["Exercises"],
        "description": "Get a list of all exercises",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Exercise"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      },
      "post": {
        "summary": "Add a new exercise",
        "tags": ["Exercises"],
        "description": "Add a new exercise to the database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExerciseData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Exercise successfully added"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/exercises/bodyparts": {
      "get": {
        "summary": "Get all muscle groups (body parts)",
        "tags": ["Exercises"],
        "description": "Get a list of all muscle groups (body parts)",
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BodyPart"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      }
    },
    "/exercises/muscles": {
      "get": {
        "summary": "Get all muscles",
        "tags": ["Exercises"],
        "description": "Get a list of all muscles",
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Muscle"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      }
    },
    "/exercises/equipments": {
      "get": {
        "summary": "Get all types of equipment",
        "tags": ["Exercises"],
        "description": "Get a list of all types of equipment",
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Equipment"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      }
    },
    "/exercises/{id}": {
      "get": {
        "summary": "Get an exercise by ID",
        "tags": ["Exercises"],
        "description": "Get an exercise from the database by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exercise"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Exercise not found"
          }
        }
      }
    },
    "/exercises_diary": {
      "get": {
        "summary": "Get dated exercises",
        "tags": ["Diary"],
        "description": "Get a list of dated exercises with filtering and pagination options",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExerciseDiary"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      },
      "post": {
        "summary": "Add a dated exercise",
        "tags": ["Diary"],
        "description": "Add a dated exercise to the diary",
        "requestBody": {
          "description": "Exercise data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExerciseDiary"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Exercise added successfully"
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      }
    },
    "/exercises_diary/{date}/{exercise}": {
      "delete": {
        "summary": "Delete a dated exercise",
        "tags": ["Diary"],
        "description": "Delete a dated exercise from the diary by date and exercise ID",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "exercise",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exercise deleted successfully"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Exercise not found"
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "Get a list of products",
        "tags": ["Products"],
        "description": "Get a list of products with filtering and pagination options",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "recommended",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["all", "true", "false"]
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer"
                    },
                    "limit": {
                      "type": "integer"
                    },
                    "blood": {
                      "type": "string"
                    },
                    "totalProducts": {
                      "type": "integer"
                    },
                    "result": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get a product by ID",
        "tags": ["Products"],
        "description": "Get a product by its unique ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/products/categories": {
      "get": {
        "summary": "Get product categories",
        "tags": ["Products"],
        "description": "Get a list of product categories",
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductsCategory"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      }
    },
    "/products_diary": {
      "get": {
        "summary": "Get dated products",
        "tags": ["Diary"],
        "description": "Get a list of dated products with filtering and pagination options",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDiary"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      },
      "post": {
        "summary": "Add a dated product",
        "tags": ["Diary"],
        "description": "Add a dated product to the diary",
        "requestBody": {
          "description": "Product data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDiary"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product added successfully"
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      }
    },
    "/products_diary/{date}/{product}": {
      "delete": {
        "summary": "Delete a dated product",
        "tags": ["Diary"],
        "description": "Delete a dated product from the diary by date and product ID",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "product",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/statistics": {
      "get": {
        "summary": "Get statistics",
        "tags": ["Statistics"],
        "description": "Get statistics data including user count, exercise count, and more.",
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "example":"Bob Tirel",
            "description": "User's name"
            
          },
          "email": {
            "type": "string",
            "format": "email",
            "example":"bobtirel@gmail.com",
            "description": "User's email"
          },
          "password": {
            "type": "string",
            "example":"123456",
            "description": "User's password"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
          "properties": {
            "token": { "type": "string", "example":"your authentication token" },
            "user": {
              "type": "object",
                "properties": {
                  "name": { "type": "string", "example":"Bob Tirel" },
                  "email": { "type": "string", "format": "email", "example":"bobtirel@gmail.com" },
                  "avatarURL": { "type": "string", "example":"avatar" },
                  "userParams": { "type": "object", "example":{} },
                  "createdAt": { "type": "date",  "example": "2023-09-19T19:55:19.539+00:00" }
                }
              }
          }
      },
      "LoginUser": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          }
        }
      },
      "Exercise": {
        "type": "object",
        "properties": {
          "bodyPart": {
            "type": "string"
          },
          "equipment": {
            "type": "string"
          },
          "gifUrl": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "burnedCalories": {
            "type": "number"
          },
          "time": {
            "type": "number"
          }
        }
      },
      "BodyPart": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "imgURL": {
            "type": "string"
          }
        }
      },
      "Muscle": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "imgURL": {
            "type": "string"
          }
        }
      },
      "Equipment": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "imgURL": {
            "type": "string"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5d51694902b2373622ff5773",
            "description": "Unique identifier for the product"
          },
          "weight": {
            "type": "number",
            "example": 100,
            "description": "Weight of the product in grams"
          },
          "calories": {
            "type": "number",
            "example": 340,
            "description": "Calories in the product"
          },
          "category": {
            "type": "string",
            "example": "dairy",
            "description": "Category of the product"
          },
          "title": {
            "type": "string",
            "example": "Danbo cheese",
            "description": "Title of the product"
          },
          "groupBloodNotAllowed": {
            "type": "object",
            "properties": {
              "1": {
                "type": "boolean",
                "example": true,
                "description": "Blood group 1 not allowed flag"
              },
              "2": {
                "type": "boolean",
                "example": true,
                "description": "Blood group 2 not allowed flag"
              },
              "3": {
                "type": "boolean",
                "example": false,
                "description": "Blood group 3 not allowed flag"
              },
              "4": {
                "type": "boolean",
                "example": false,
                "description": "Blood group 4 not allowed flag"
              }
            },
            "description": "Blood groups not allowed for consumption"
          }
        }
      },
      "ProductsCategory": {
        "type": "object",
        "properties": {
          "productsCategories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "alcoholic drinks",
              "berries",
              "cereals",
              "dairy",
              "dried fruits",
              "eggs",
              "fish",
              "flour",
              "fruits",
              "meat",
              "mushrooms",
              "nuts",
              "oils and fats",
              "poppy",
              "sausage",
              "seeds",
              "sesame",
              "soft drinks",
              "vegetables and herbs"
            ],
            "description": "List of product categories"
          }
        }
      },
      "User": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "avatarURL": {
            "type": "string"
          },
          "userParams": {
            "type": "object"
          }
        }
      },
      "UserParams": {
        "type": "object",
        "properties": {
          "height": {
            "type": "number"
          },
          "currentWeight": {
            "type": "number"
          },
          "desiredWeight": {
            "type": "number"
          },
          "birthday": {
            "type": "string"
          },
          "blood": {
            "type": "number"
          },
          "sex": {
            "type": "string"
          },
          "levelActivity": {
            "type": "number"
          }
        }
      },
      "UpdateUsername": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "ExerciseData": {
        "type": "object",
        "properties": {
          "bodyPart": {
            "type": "string"
          },
          "equipment": {
            "type": "string"
          },
          "gifUrl": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "burnedCalories": {
            "type": "number"
          },
          "time": {
            "type": "number"
          }
        }
      },
      "ExerciseDiary": {
        "type": "object",
        "properties": {
          "exerciseId": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "time": {
            "type": "number"
          },
          "calories": {
            "type": "number"
          },
          "owner": {
            "type": "string"
          }
        }
      },
      "ProductDiary": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "amount": {
            "type": "number"
          },
          "calories": {
            "type": "number"
          },
          "owner": {
            "type": "string"
          }
        }
      },
      "StatisticsResult": {
        "type": "object",
        "properties": {
          "allUser": {
            "type": "integer"
          },
          "exercisesVideo": {
            "type": "integer"
          },
          "exercisesDone": {
            "type": "integer"
          },
          "allCalories": {
            "type": "integer"
          },
          "allTime": {
            "type": "integer"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
